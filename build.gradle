import org.gradle.internal.os.OperatingSystem

buildscript {
  repositories {
      mavenCentral()
      jcenter()
  }
}

// Plugins
plugins {
    id 'java'
    id 'maven'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'checkstyle'
    id 'findbugs'
    id("org.protelis.protelisdoc") version "0.2.0"
}


group = 'com.bbn.protelis'
version = '4.0.5'

description = """Protelis Testbed"""

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
  // local repository first
  mavenLocal()
  
  jcenter()
}

dependencies {
    implementation group: 'com.cedarsoftware', name: 'json-io', version:'4.9.12'
    implementation group: 'com.google.guava', name: 'guava', version:'22.0'
    implementation(group: 'org.protelis', name: 'protelis', version:'10.6.0')
    implementation group: 'commons-cli', name: 'commons-cli', version:'1.4'
    implementation group: 'net.sf.jung', name: 'jung-graph-impl', version:'2.0.1'
    implementation group: 'net.sf.jung', name: 'jung-algorithms', version:'2.0.1'
    implementation group: 'net.sf.jung', name: 'jung-visualization', version:'2.0.1'
    implementation group: 'org.slf4j', name: 'slf4j-api', version:'1.7.25'
    implementation group: 'org.kie', name: 'kie-api', version:'7.0.0.Final'
    runtime group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version:'2.8.2'
    runtime group: 'org.apache.logging.log4j', name: 'log4j-core', version:'2.8.2'
    testImplementation( group: 'junit', name: 'junit', version: '4.12') {
        exclude module: 'hamcrest-core'
    }
    testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version:'1.3'
    
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.8.9'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version:'2.8.9'
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version:'2.8.9'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version:'2.8.9'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version:'2.8.9'
    
    implementation group: 'dnsjava', name: 'dnsjava', version: '2.1.8'

    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    implementation 'com.github.spotbugs:spotbugs:3.1.12'
    implementation 'org.danilopianini:javalib-java7:0.6.1'
    implementation 'org.apache.commons:commons-math3:3.4'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.3.50' // for Protelis2KotlinDoc
}

// set gradle version when generating the wrapper
//task wrapper(type: Wrapper) {
//    gradleVersion = '5.0'
//}

eclipse {
    classpath {
        downloadSources = true
        downloadJavadoc = true
    }
}

checkstyle {
    config = resources.text.fromFile('style.xml', 'UTF-8')
    showViolations = true
    ignoreFailures = false
    toolVersion = "8.10"
}

test {
    testLogging.showStandardStreams = true
    ignoreFailures Boolean.getBoolean("test.ignoreFailures")        
}

Protelis2KotlinDoc {
    baseDir.set("src/main/resources/protelis") // base dir from which recursively looking for .pt files
    // destDir.set("${project.buildDir.path}/protelis-docs/") // output dir for docs
    // kotlinVersion.set("+")
    // protelisVersion.set("+")
    outputFormat.set("javadoc") // Dokka's output format (alternative: 'html')
    debug.set(true) // Debug prints are disabled by default
    automaticDependencies.set(false)
}

findbugs {
    ignoreFailures = true
}

task sourceJar(type: Jar) {
  classifier "sources"
  from sourceSets.main.allJava
}

publishing {
    repositories {
        mavenLocal()
    }
    
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact tasks.sourceJar
        }
    }
}
